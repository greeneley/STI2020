package TD2;

import org.chocosolver.solver.Model;
import org.chocosolver.solver.Solution;
import org.chocosolver.solver.variables.BoolVar;
import org.chocosolver.solver.variables.IntVar;
import org.chocosolver.solver.variables.SetVar;
public class exercice3 {
	
	public void modelAndSolve() {
		long start = System.currentTimeMillis(); 

		int n = 10;
		Model model = new Model("Serialisabilite");
		IntVar[] T = new IntVar[n];
		
		for(int q = 0; q < n ; q++){
            T[q] = model.intVar("T_"+q, 1, n); 
        }
		int[][] a = {{0,1,1,1},{1,2,1,2},{0,1,2,3},{0,3,3,4},{1,2,3,5},{1,4,2,6},{0,2,4,7},{0,4,5,8},{1,5,4,9},{0,5,5,10}};
		
		/*
		 * Ti != Tj , i!=j
		 */
		for(int i  = 0; i < n-1; i++) {
			for (int j = 0 ; j < n - 1; j++) {
				if ( i == j) {
					break;
				}
				model.arithm(T[i],"!=",T[j]).post();
			}
		}
		
		for(int i  = 0; i < n-1; i++) {
			for (int j = 0 ; j < n - 1; j++) {
				if ( i == j) {
					break;
				}
				if (a[i][2] == a[j][2]) {
					if(a[0][0] == a[j][0] || a[0][3] != a[0][3]) {
						model.arithm(T[i], "<", T[j]).post();
					}
				}
			}
		}
		
//				BoolVar c1 = model.arithm(T[i], "<", T[j]).reify();
//				if (c1 == 1) {
//					
//				}
//			}
//		}
		Solution solution = model.getSolver().findSolution();
        if(solution != null){
            System.out.println(solution.toString());
        }
	}
	public static void main(String[] args) {
        new exercice3().modelAndSolve();
    }
}
