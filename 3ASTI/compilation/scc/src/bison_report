Terminals unused in grammar

   TK_PLUSPLUS
   TK_CHAR
   TK_STRING
   TK_FOR


State 86 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 type: TK_INT_TYPE
    2     | TK_VOID_TYPE

    3 e_expr: e_expr TK_PLUS t_expr
    4       | e_expr TK_MINUS t_expr
    5       | t_expr

    6 t_expr: t_expr TK_MUL f_expr
    7       | t_expr TK_DIV f_expr
    8       | f_expr

    9 f_expr: TK_NUM
   10       | TK_ID
   11       | TK_ID TK_LPAR caller_arg_list TK_RPAR
   12       | TK_LPAR e_expr TK_RPAR

   13 expr: e_expr

   14 test: expr TK_GREATER expr
   15     | expr TK_NEQ expr
   16     | expr TK_EQ expr
   17     | TK_LPAR test TK_RPAR

   18 stmt: TK_ID TK_ASSIGN expr TK_SEMI

   19 $@1: %empty

   20 $@2: %empty

   21 stmt: TK_IF test $@1 stmt_block $@2 stmt_else

   22 $@3: %empty

   23 $@4: %empty

   24 stmt: TK_WHILE $@3 test $@4 stmt_block
   25     | TK_RETURN expr TK_SEMI
   26     | TK_PRINT TK_LPAR expr TK_RPAR TK_SEMI
   27     | TK_INPUT TK_LPAR TK_ID TK_RPAR TK_SEMI

   28 stmt_else: %empty
   29          | TK_ELSE stmt_block

   30 stmt_block: stmt
   31           | TK_LACC stmt_list TK_RACC

   32 stmt_list: %empty
   33          | stmt_list stmt

   34 declare_args: %empty
   35             | type TK_ID
   36             | declare_args TK_COMMA type TK_ID

   37 declare_local_vars: %empty
   38                   | declare_local_vars type TK_ID TK_SEMI

   39 caller_arg_list: %empty
   40                | expr
   41                | caller_arg_list TK_COMMA expr

   42 $@5: %empty

   43 $@6: %empty

   44 function: type TK_ID TK_LPAR $@5 declare_args TK_RPAR TK_LACC declare_local_vars $@6 stmt_list TK_RACC

   45 function_list: %empty
   46              | function_list function

   47 $@7: %empty

   48 prog: $@7 function_list function


Terminals, with rules where they appear

$end (0) 0
error (256)
TK_INT_TYPE (258) 1
TK_VOID_TYPE (259) 2
TK_LPAR (260) 11 12 17 26 27 44
TK_RPAR (261) 11 12 17 26 27 44
TK_COMMA (262) 36 41
TK_SEMI (263) 18 25 26 27 38
TK_LACC (264) 31 44
TK_RACC (265) 31 44
TK_GREATER (266) 14
TK_NEQ (267) 15
TK_EQ (268) 16
TK_PLUS (269) 3
TK_MINUS (270) 4
TK_MUL (271) 6
TK_PLUSPLUS (272)
TK_NUM (273) 9
TK_ID (274) 10 11 18 27 35 36 38 44
TK_CHAR (275)
TK_STRING (276)
TK_ASSIGN (277) 18
TK_IF (278) 21
TK_ELSE (279) 29
TK_WHILE (280) 24
TK_FOR (281)
TK_RETURN (282) 25
TK_PRINT (283) 26
TK_INPUT (284) 27
TK_DIV (285) 7


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
type (32)
    on left: 1 2, on right: 35 36 38 44
e_expr (33)
    on left: 3 4 5, on right: 3 4 12 13
t_expr (34)
    on left: 6 7 8, on right: 3 4 5 6 7
f_expr (35)
    on left: 9 10 11 12, on right: 6 7 8
expr (36)
    on left: 13, on right: 14 15 16 18 25 26 40 41
test (37)
    on left: 14 15 16 17, on right: 17 21 24
stmt (38)
    on left: 18 21 24 25 26 27, on right: 30 33
$@1 (39)
    on left: 19, on right: 21
$@2 (40)
    on left: 20, on right: 21
$@3 (41)
    on left: 22, on right: 24
$@4 (42)
    on left: 23, on right: 24
stmt_else (43)
    on left: 28 29, on right: 21
stmt_block (44)
    on left: 30 31, on right: 21 24 29
stmt_list (45)
    on left: 32 33, on right: 31 33 44
declare_args (46)
    on left: 34 35 36, on right: 36 44
declare_local_vars (47)
    on left: 37 38, on right: 38 44
caller_arg_list (48)
    on left: 39 40 41, on right: 11 41
function (49)
    on left: 44, on right: 46 48
$@5 (50)
    on left: 42, on right: 44
$@6 (51)
    on left: 43, on right: 44
function_list (52)
    on left: 45 46, on right: 46 48
prog (53)
    on left: 48, on right: 0
$@7 (54)
    on left: 47, on right: 48


State 0

    0 $accept: . prog $end

    $default  reduce using rule 47 ($@7)

    prog  go to state 1
    $@7   go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

   48 prog: $@7 . function_list function

    $default  reduce using rule 45 (function_list)

    function_list  go to state 4


State 3

    0 $accept: prog $end .

    $default  accept


State 4

   46 function_list: function_list . function
   48 prog: $@7 function_list . function

    TK_INT_TYPE   shift, and go to state 5
    TK_VOID_TYPE  shift, and go to state 6

    type      go to state 7
    function  go to state 8


State 5

    1 type: TK_INT_TYPE .

    $default  reduce using rule 1 (type)


State 6

    2 type: TK_VOID_TYPE .

    $default  reduce using rule 2 (type)


State 7

   44 function: type . TK_ID TK_LPAR $@5 declare_args TK_RPAR TK_LACC declare_local_vars $@6 stmt_list TK_RACC

    TK_ID  shift, and go to state 9


State 8

   46 function_list: function_list function .  [TK_INT_TYPE, TK_VOID_TYPE]
   48 prog: $@7 function_list function .  [$end]

    $end      reduce using rule 48 (prog)
    $default  reduce using rule 46 (function_list)


State 9

   44 function: type TK_ID . TK_LPAR $@5 declare_args TK_RPAR TK_LACC declare_local_vars $@6 stmt_list TK_RACC

    TK_LPAR  shift, and go to state 10


State 10

   44 function: type TK_ID TK_LPAR . $@5 declare_args TK_RPAR TK_LACC declare_local_vars $@6 stmt_list TK_RACC

    $default  reduce using rule 42 ($@5)

    $@5  go to state 11


State 11

   44 function: type TK_ID TK_LPAR $@5 . declare_args TK_RPAR TK_LACC declare_local_vars $@6 stmt_list TK_RACC

    TK_INT_TYPE   shift, and go to state 5
    TK_VOID_TYPE  shift, and go to state 6

    $default  reduce using rule 34 (declare_args)

    type          go to state 12
    declare_args  go to state 13


State 12

   35 declare_args: type . TK_ID

    TK_ID  shift, and go to state 14


State 13

   36 declare_args: declare_args . TK_COMMA type TK_ID
   44 function: type TK_ID TK_LPAR $@5 declare_args . TK_RPAR TK_LACC declare_local_vars $@6 stmt_list TK_RACC

    TK_RPAR   shift, and go to state 15
    TK_COMMA  shift, and go to state 16


State 14

   35 declare_args: type TK_ID .

    $default  reduce using rule 35 (declare_args)


State 15

   44 function: type TK_ID TK_LPAR $@5 declare_args TK_RPAR . TK_LACC declare_local_vars $@6 stmt_list TK_RACC

    TK_LACC  shift, and go to state 17


State 16

   36 declare_args: declare_args TK_COMMA . type TK_ID

    TK_INT_TYPE   shift, and go to state 5
    TK_VOID_TYPE  shift, and go to state 6

    type  go to state 18


State 17

   44 function: type TK_ID TK_LPAR $@5 declare_args TK_RPAR TK_LACC . declare_local_vars $@6 stmt_list TK_RACC

    $default  reduce using rule 37 (declare_local_vars)

    declare_local_vars  go to state 19


State 18

   36 declare_args: declare_args TK_COMMA type . TK_ID

    TK_ID  shift, and go to state 20


State 19

   38 declare_local_vars: declare_local_vars . type TK_ID TK_SEMI
   44 function: type TK_ID TK_LPAR $@5 declare_args TK_RPAR TK_LACC declare_local_vars . $@6 stmt_list TK_RACC

    TK_INT_TYPE   shift, and go to state 5
    TK_VOID_TYPE  shift, and go to state 6

    $default  reduce using rule 43 ($@6)

    type  go to state 21
    $@6   go to state 22


State 20

   36 declare_args: declare_args TK_COMMA type TK_ID .

    $default  reduce using rule 36 (declare_args)


State 21

   38 declare_local_vars: declare_local_vars type . TK_ID TK_SEMI

    TK_ID  shift, and go to state 23


State 22

   44 function: type TK_ID TK_LPAR $@5 declare_args TK_RPAR TK_LACC declare_local_vars $@6 . stmt_list TK_RACC

    $default  reduce using rule 32 (stmt_list)

    stmt_list  go to state 24


State 23

   38 declare_local_vars: declare_local_vars type TK_ID . TK_SEMI

    TK_SEMI  shift, and go to state 25


State 24

   33 stmt_list: stmt_list . stmt
   44 function: type TK_ID TK_LPAR $@5 declare_args TK_RPAR TK_LACC declare_local_vars $@6 stmt_list . TK_RACC

    TK_RACC    shift, and go to state 26
    TK_ID      shift, and go to state 27
    TK_IF      shift, and go to state 28
    TK_WHILE   shift, and go to state 29
    TK_RETURN  shift, and go to state 30
    TK_PRINT   shift, and go to state 31
    TK_INPUT   shift, and go to state 32

    stmt  go to state 33


State 25

   38 declare_local_vars: declare_local_vars type TK_ID TK_SEMI .

    $default  reduce using rule 38 (declare_local_vars)


State 26

   44 function: type TK_ID TK_LPAR $@5 declare_args TK_RPAR TK_LACC declare_local_vars $@6 stmt_list TK_RACC .

    $default  reduce using rule 44 (function)


State 27

   18 stmt: TK_ID . TK_ASSIGN expr TK_SEMI

    TK_ASSIGN  shift, and go to state 34


State 28

   21 stmt: TK_IF . test $@1 stmt_block $@2 stmt_else

    TK_LPAR  shift, and go to state 35
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 38
    t_expr  go to state 39
    f_expr  go to state 40
    expr    go to state 41
    test    go to state 42


State 29

   24 stmt: TK_WHILE . $@3 test $@4 stmt_block

    $default  reduce using rule 22 ($@3)

    $@3  go to state 43


State 30

   25 stmt: TK_RETURN . expr TK_SEMI

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 38
    t_expr  go to state 39
    f_expr  go to state 40
    expr    go to state 45


State 31

   26 stmt: TK_PRINT . TK_LPAR expr TK_RPAR TK_SEMI

    TK_LPAR  shift, and go to state 46


State 32

   27 stmt: TK_INPUT . TK_LPAR TK_ID TK_RPAR TK_SEMI

    TK_LPAR  shift, and go to state 47


State 33

   33 stmt_list: stmt_list stmt .

    $default  reduce using rule 33 (stmt_list)


State 34

   18 stmt: TK_ID TK_ASSIGN . expr TK_SEMI

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 38
    t_expr  go to state 39
    f_expr  go to state 40
    expr    go to state 48


State 35

   12 f_expr: TK_LPAR . e_expr TK_RPAR
   17 test: TK_LPAR . test TK_RPAR

    TK_LPAR  shift, and go to state 35
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 49
    t_expr  go to state 39
    f_expr  go to state 40
    expr    go to state 41
    test    go to state 50


State 36

    9 f_expr: TK_NUM .

    $default  reduce using rule 9 (f_expr)


State 37

   10 f_expr: TK_ID .  [TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_NEQ, TK_EQ, TK_PLUS, TK_MINUS, TK_MUL, TK_ID, TK_IF, TK_WHILE, TK_RETURN, TK_PRINT, TK_INPUT, TK_DIV]
   11       | TK_ID . TK_LPAR caller_arg_list TK_RPAR

    TK_LPAR  shift, and go to state 51

    $default  reduce using rule 10 (f_expr)


State 38

    3 e_expr: e_expr . TK_PLUS t_expr
    4       | e_expr . TK_MINUS t_expr
   13 expr: e_expr .  [TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_NEQ, TK_EQ, TK_ID, TK_IF, TK_WHILE, TK_RETURN, TK_PRINT, TK_INPUT]

    TK_PLUS   shift, and go to state 52
    TK_MINUS  shift, and go to state 53

    $default  reduce using rule 13 (expr)


State 39

    5 e_expr: t_expr .  [TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_NEQ, TK_EQ, TK_PLUS, TK_MINUS, TK_ID, TK_IF, TK_WHILE, TK_RETURN, TK_PRINT, TK_INPUT]
    6 t_expr: t_expr . TK_MUL f_expr
    7       | t_expr . TK_DIV f_expr

    TK_MUL  shift, and go to state 54
    TK_DIV  shift, and go to state 55

    $default  reduce using rule 5 (e_expr)


State 40

    8 t_expr: f_expr .

    $default  reduce using rule 8 (t_expr)


State 41

   14 test: expr . TK_GREATER expr
   15     | expr . TK_NEQ expr
   16     | expr . TK_EQ expr

    TK_GREATER  shift, and go to state 56
    TK_NEQ      shift, and go to state 57
    TK_EQ       shift, and go to state 58


State 42

   21 stmt: TK_IF test . $@1 stmt_block $@2 stmt_else

    $default  reduce using rule 19 ($@1)

    $@1  go to state 59


State 43

   24 stmt: TK_WHILE $@3 . test $@4 stmt_block

    TK_LPAR  shift, and go to state 35
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 38
    t_expr  go to state 39
    f_expr  go to state 40
    expr    go to state 41
    test    go to state 60


State 44

   12 f_expr: TK_LPAR . e_expr TK_RPAR

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 61
    t_expr  go to state 39
    f_expr  go to state 40


State 45

   25 stmt: TK_RETURN expr . TK_SEMI

    TK_SEMI  shift, and go to state 62


State 46

   26 stmt: TK_PRINT TK_LPAR . expr TK_RPAR TK_SEMI

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 38
    t_expr  go to state 39
    f_expr  go to state 40
    expr    go to state 63


State 47

   27 stmt: TK_INPUT TK_LPAR . TK_ID TK_RPAR TK_SEMI

    TK_ID  shift, and go to state 64


State 48

   18 stmt: TK_ID TK_ASSIGN expr . TK_SEMI

    TK_SEMI  shift, and go to state 65


State 49

    3 e_expr: e_expr . TK_PLUS t_expr
    4       | e_expr . TK_MINUS t_expr
   12 f_expr: TK_LPAR e_expr . TK_RPAR
   13 expr: e_expr .  [TK_GREATER, TK_NEQ, TK_EQ]

    TK_RPAR   shift, and go to state 66
    TK_PLUS   shift, and go to state 52
    TK_MINUS  shift, and go to state 53

    $default  reduce using rule 13 (expr)


State 50

   17 test: TK_LPAR test . TK_RPAR

    TK_RPAR  shift, and go to state 67


State 51

   11 f_expr: TK_ID TK_LPAR . caller_arg_list TK_RPAR

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    $default  reduce using rule 39 (caller_arg_list)

    e_expr           go to state 38
    t_expr           go to state 39
    f_expr           go to state 40
    expr             go to state 68
    caller_arg_list  go to state 69


State 52

    3 e_expr: e_expr TK_PLUS . t_expr

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    t_expr  go to state 70
    f_expr  go to state 40


State 53

    4 e_expr: e_expr TK_MINUS . t_expr

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    t_expr  go to state 71
    f_expr  go to state 40


State 54

    6 t_expr: t_expr TK_MUL . f_expr

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    f_expr  go to state 72


State 55

    7 t_expr: t_expr TK_DIV . f_expr

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    f_expr  go to state 73


State 56

   14 test: expr TK_GREATER . expr

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 38
    t_expr  go to state 39
    f_expr  go to state 40
    expr    go to state 74


State 57

   15 test: expr TK_NEQ . expr

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 38
    t_expr  go to state 39
    f_expr  go to state 40
    expr    go to state 75


State 58

   16 test: expr TK_EQ . expr

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 38
    t_expr  go to state 39
    f_expr  go to state 40
    expr    go to state 76


State 59

   21 stmt: TK_IF test $@1 . stmt_block $@2 stmt_else

    TK_LACC    shift, and go to state 77
    TK_ID      shift, and go to state 27
    TK_IF      shift, and go to state 28
    TK_WHILE   shift, and go to state 29
    TK_RETURN  shift, and go to state 30
    TK_PRINT   shift, and go to state 31
    TK_INPUT   shift, and go to state 32

    stmt        go to state 78
    stmt_block  go to state 79


State 60

   24 stmt: TK_WHILE $@3 test . $@4 stmt_block

    $default  reduce using rule 23 ($@4)

    $@4  go to state 80


State 61

    3 e_expr: e_expr . TK_PLUS t_expr
    4       | e_expr . TK_MINUS t_expr
   12 f_expr: TK_LPAR e_expr . TK_RPAR

    TK_RPAR   shift, and go to state 66
    TK_PLUS   shift, and go to state 52
    TK_MINUS  shift, and go to state 53


State 62

   25 stmt: TK_RETURN expr TK_SEMI .

    $default  reduce using rule 25 (stmt)


State 63

   26 stmt: TK_PRINT TK_LPAR expr . TK_RPAR TK_SEMI

    TK_RPAR  shift, and go to state 81


State 64

   27 stmt: TK_INPUT TK_LPAR TK_ID . TK_RPAR TK_SEMI

    TK_RPAR  shift, and go to state 82


State 65

   18 stmt: TK_ID TK_ASSIGN expr TK_SEMI .

    $default  reduce using rule 18 (stmt)


State 66

   12 f_expr: TK_LPAR e_expr TK_RPAR .

    $default  reduce using rule 12 (f_expr)


State 67

   17 test: TK_LPAR test TK_RPAR .

    $default  reduce using rule 17 (test)


State 68

   40 caller_arg_list: expr .

    $default  reduce using rule 40 (caller_arg_list)


State 69

   11 f_expr: TK_ID TK_LPAR caller_arg_list . TK_RPAR
   41 caller_arg_list: caller_arg_list . TK_COMMA expr

    TK_RPAR   shift, and go to state 83
    TK_COMMA  shift, and go to state 84


State 70

    3 e_expr: e_expr TK_PLUS t_expr .  [TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_NEQ, TK_EQ, TK_PLUS, TK_MINUS, TK_ID, TK_IF, TK_WHILE, TK_RETURN, TK_PRINT, TK_INPUT]
    6 t_expr: t_expr . TK_MUL f_expr
    7       | t_expr . TK_DIV f_expr

    TK_MUL  shift, and go to state 54
    TK_DIV  shift, and go to state 55

    $default  reduce using rule 3 (e_expr)


State 71

    4 e_expr: e_expr TK_MINUS t_expr .  [TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_NEQ, TK_EQ, TK_PLUS, TK_MINUS, TK_ID, TK_IF, TK_WHILE, TK_RETURN, TK_PRINT, TK_INPUT]
    6 t_expr: t_expr . TK_MUL f_expr
    7       | t_expr . TK_DIV f_expr

    TK_MUL  shift, and go to state 54
    TK_DIV  shift, and go to state 55

    $default  reduce using rule 4 (e_expr)


State 72

    6 t_expr: t_expr TK_MUL f_expr .

    $default  reduce using rule 6 (t_expr)


State 73

    7 t_expr: t_expr TK_DIV f_expr .

    $default  reduce using rule 7 (t_expr)


State 74

   14 test: expr TK_GREATER expr .

    $default  reduce using rule 14 (test)


State 75

   15 test: expr TK_NEQ expr .

    $default  reduce using rule 15 (test)


State 76

   16 test: expr TK_EQ expr .

    $default  reduce using rule 16 (test)


State 77

   31 stmt_block: TK_LACC . stmt_list TK_RACC

    $default  reduce using rule 32 (stmt_list)

    stmt_list  go to state 85


State 78

   30 stmt_block: stmt .

    $default  reduce using rule 30 (stmt_block)


State 79

   21 stmt: TK_IF test $@1 stmt_block . $@2 stmt_else

    $default  reduce using rule 20 ($@2)

    $@2  go to state 86


State 80

   24 stmt: TK_WHILE $@3 test $@4 . stmt_block

    TK_LACC    shift, and go to state 77
    TK_ID      shift, and go to state 27
    TK_IF      shift, and go to state 28
    TK_WHILE   shift, and go to state 29
    TK_RETURN  shift, and go to state 30
    TK_PRINT   shift, and go to state 31
    TK_INPUT   shift, and go to state 32

    stmt        go to state 78
    stmt_block  go to state 87


State 81

   26 stmt: TK_PRINT TK_LPAR expr TK_RPAR . TK_SEMI

    TK_SEMI  shift, and go to state 88


State 82

   27 stmt: TK_INPUT TK_LPAR TK_ID TK_RPAR . TK_SEMI

    TK_SEMI  shift, and go to state 89


State 83

   11 f_expr: TK_ID TK_LPAR caller_arg_list TK_RPAR .

    $default  reduce using rule 11 (f_expr)


State 84

   41 caller_arg_list: caller_arg_list TK_COMMA . expr

    TK_LPAR  shift, and go to state 44
    TK_NUM   shift, and go to state 36
    TK_ID    shift, and go to state 37

    e_expr  go to state 38
    t_expr  go to state 39
    f_expr  go to state 40
    expr    go to state 90


State 85

   31 stmt_block: TK_LACC stmt_list . TK_RACC
   33 stmt_list: stmt_list . stmt

    TK_RACC    shift, and go to state 91
    TK_ID      shift, and go to state 27
    TK_IF      shift, and go to state 28
    TK_WHILE   shift, and go to state 29
    TK_RETURN  shift, and go to state 30
    TK_PRINT   shift, and go to state 31
    TK_INPUT   shift, and go to state 32

    stmt  go to state 33


State 86

   21 stmt: TK_IF test $@1 stmt_block $@2 . stmt_else

    TK_ELSE  shift, and go to state 92

    TK_ELSE   [reduce using rule 28 (stmt_else)]
    $default  reduce using rule 28 (stmt_else)

    stmt_else  go to state 93


State 87

   24 stmt: TK_WHILE $@3 test $@4 stmt_block .

    $default  reduce using rule 24 (stmt)


State 88

   26 stmt: TK_PRINT TK_LPAR expr TK_RPAR TK_SEMI .

    $default  reduce using rule 26 (stmt)


State 89

   27 stmt: TK_INPUT TK_LPAR TK_ID TK_RPAR TK_SEMI .

    $default  reduce using rule 27 (stmt)


State 90

   41 caller_arg_list: caller_arg_list TK_COMMA expr .

    $default  reduce using rule 41 (caller_arg_list)


State 91

   31 stmt_block: TK_LACC stmt_list TK_RACC .

    $default  reduce using rule 31 (stmt_block)


State 92

   29 stmt_else: TK_ELSE . stmt_block

    TK_LACC    shift, and go to state 77
    TK_ID      shift, and go to state 27
    TK_IF      shift, and go to state 28
    TK_WHILE   shift, and go to state 29
    TK_RETURN  shift, and go to state 30
    TK_PRINT   shift, and go to state 31
    TK_INPUT   shift, and go to state 32

    stmt        go to state 78
    stmt_block  go to state 94


State 93

   21 stmt: TK_IF test $@1 stmt_block $@2 stmt_else .

    $default  reduce using rule 21 (stmt)


State 94

   29 stmt_else: TK_ELSE stmt_block .

    $default  reduce using rule 29 (stmt_else)
