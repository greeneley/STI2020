Terminals unused in grammar

   TK_TRUE
   TK_FALSE
   TK_MOD
   TK_STRING
   TK_REF
   TK_ALLOC
   TK_FREE
   TK_ASM


State 48 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 67 conflicts: 2 shift/reduce
State 73 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 type: base
    2     | pointer
    3     | array
    4     | record
    5     | TK_TYPE_ID
    6     | TK_LPAR type TK_RPAR

    7 base: TK_INT_TYPE
    8     | TK_CHAR_TYPE
    9     | TK_VOID_TYPE

   10 pointer: type TK_MUL

   11 array: type TK_LBRAC TK_NUM TK_RBRAC

   12 record: TK_STRUCT TK_LACC field_list TK_RACC

   13 field_list: type TK_ID TK_SEMI
   14           | field_list type TK_ID TK_SEMI

   15 type_def: TK_TYPEDEF type TK_TYPE_ID TK_SEMI

   16 type_def_list: %empty
   17              | type_def_list type_def

   18 e_expr: e_expr TK_PLUS t_expr
   19       | e_expr TK_MINUS t_expr
   20       | t_expr

   21 t_expr: t_expr TK_MUL f_expr
   22       | t_expr TK_DIV f_expr
   23       | f_expr

   24 f_expr: TK_NUM
   25       | TK_CHAR
   26       | var_expr
   27       | TK_SIZEOF TK_LPAR TK_TYPE_ID TK_RPAR

   28 $@1: %empty

   29 f_expr: TK_ID TK_LPAR $@1 caller_arg_list TK_RPAR
   30       | TK_LPAR e_expr TK_RPAR

   31 var_expr: TK_ID
   32         | TK_MUL var_expr
   33         | var_expr TK_LBRAC e_expr TK_RBRAC
   34         | var_expr TK_DOT TK_ID
   35         | TK_LPAR var_expr TK_RPAR

   36 expr: e_expr

   37 test: expr TK_GREATER expr
   38     | expr TK_GREATER_EQ expr
   39     | expr TK_LOWER expr
   40     | expr TK_LOWER_EQ expr
   41     | expr TK_EQUAL expr
   42     | expr TK_NEQUAL expr
   43     | TK_LPAR test TK_RPAR

   44 stmt: TK_ID TK_ASSIGN expr TK_SEMI
   45     | var_expr TK_ASSIGN expr TK_SEMI

   46 $@2: %empty

   47 $@3: %empty

   48 stmt: TK_IF test $@2 stmt_block $@3 stmt_else

   49 $@4: %empty

   50 $@5: %empty

   51 stmt: TK_WHILE $@4 test $@5 stmt_block

   52 $@6: %empty

   53 $@7: %empty

   54 stmt: TK_FOR TK_LPAR stmt $@6 test TK_SEMI $@7 TK_ID TK_PLUSPLUS TK_RPAR stmt_block
   55     | TK_RETURN expr TK_SEMI

   56 $@8: %empty

   57 stmt: TK_ID TK_LPAR $@8 caller_arg_list TK_RPAR TK_SEMI

   58 stmt_else: %empty
   59          | TK_ELSE stmt_block

   60 stmt_block: stmt
   61           | TK_LACC stmt_list TK_RACC

   62 stmt_list: %empty
   63          | stmt_list stmt

   64 declare_args: %empty
   65             | type TK_ID
   66             | declare_args TK_COMMA type TK_ID

   67 declare_local_vars: %empty
   68                   | declare_local_vars type TK_ID TK_SEMI

   69 caller_arg_list: %empty
   70                | expr
   71                | caller_arg_list TK_COMMA expr

   72 $@9: %empty

   73 $@10: %empty

   74 function: type TK_ID TK_LPAR $@9 declare_args TK_RPAR TK_LACC declare_local_vars $@10 stmt_list TK_RACC

   75 function_list: %empty
   76              | function_list function

   77 $@11: %empty

   78 prog: type_def_list $@11 function_list function


Terminals, with rules where they appear

$end (0) 0
error (256)
TK_INT_TYPE (258) 7
TK_CHAR_TYPE (259) 8
TK_VOID_TYPE (260) 9
TK_STRUCT (261) 12
TK_TYPEDEF (262) 15
TK_SIZEOF (263) 27
TK_LPAR (264) 6 27 29 30 35 43 54 57 74
TK_RPAR (265) 6 27 29 30 35 43 54 57 74
TK_COMMA (266) 66 71
TK_SEMI (267) 13 14 15 44 45 54 55 57 68
TK_LACC (268) 12 61 74
TK_RACC (269) 12 61 74
TK_TRUE (270)
TK_FALSE (271)
TK_GREATER (272) 37
TK_GREATER_EQ (273) 38
TK_LOWER (274) 39
TK_LOWER_EQ (275) 40
TK_EQUAL (276) 41
TK_NEQUAL (277) 42
TK_PLUS (278) 18
TK_MINUS (279) 19
TK_MUL (280) 10 21 32
TK_DIV (281) 22
TK_MOD (282)
TK_PLUSPLUS (283) 54
TK_NUM (284) 11 24
TK_ID (285) 13 14 29 31 34 44 54 57 65 66 68 74
TK_TYPE_ID (286) 5 15 27
TK_CHAR (287) 25
TK_STRING (288)
TK_LBRAC (289) 11 33
TK_RBRAC (290) 11 33
TK_REF (291)
TK_DOT (292) 34
TK_ALLOC (293)
TK_FREE (294)
TK_ASSIGN (295) 44 45
TK_IF (296) 48
TK_ELSE (297) 59
TK_WHILE (298) 51
TK_FOR (299) 54
TK_RETURN (300) 55
TK_ASM (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
type (48)
    on left: 1 2 3 4 5 6, on right: 6 10 11 13 14 15 65 66 68 74
base (49)
    on left: 7 8 9, on right: 1
pointer (50)
    on left: 10, on right: 2
array (51)
    on left: 11, on right: 3
record (52)
    on left: 12, on right: 4
field_list (53)
    on left: 13 14, on right: 12 14
type_def (54)
    on left: 15, on right: 17
type_def_list (55)
    on left: 16 17, on right: 17 78
e_expr (56)
    on left: 18 19 20, on right: 18 19 30 33 36
t_expr (57)
    on left: 21 22 23, on right: 18 19 20 21 22
f_expr (58)
    on left: 24 25 26 27 29 30, on right: 21 22 23
$@1 (59)
    on left: 28, on right: 29
var_expr (60)
    on left: 31 32 33 34 35, on right: 26 32 33 34 35 45
expr (61)
    on left: 36, on right: 37 38 39 40 41 42 44 45 55 70 71
test (62)
    on left: 37 38 39 40 41 42 43, on right: 43 48 51 54
stmt (63)
    on left: 44 45 48 51 54 55 57, on right: 54 60 63
$@2 (64)
    on left: 46, on right: 48
$@3 (65)
    on left: 47, on right: 48
$@4 (66)
    on left: 49, on right: 51
$@5 (67)
    on left: 50, on right: 51
$@6 (68)
    on left: 52, on right: 54
$@7 (69)
    on left: 53, on right: 54
$@8 (70)
    on left: 56, on right: 57
stmt_else (71)
    on left: 58 59, on right: 48
stmt_block (72)
    on left: 60 61, on right: 48 51 54 59
stmt_list (73)
    on left: 62 63, on right: 61 63 74
declare_args (74)
    on left: 64 65 66, on right: 66 74
declare_local_vars (75)
    on left: 67 68, on right: 68 74
caller_arg_list (76)
    on left: 69 70 71, on right: 29 57 71
function (77)
    on left: 74, on right: 76 78
$@9 (78)
    on left: 72, on right: 74
$@10 (79)
    on left: 73, on right: 74
function_list (80)
    on left: 75 76, on right: 76 78
prog (81)
    on left: 78, on right: 0
$@11 (82)
    on left: 77, on right: 78


State 0

    0 $accept: . prog $end

    $default  reduce using rule 16 (type_def_list)

    type_def_list  go to state 1
    prog           go to state 2


State 1

   17 type_def_list: type_def_list . type_def
   78 prog: type_def_list . $@11 function_list function

    TK_TYPEDEF  shift, and go to state 3

    $default  reduce using rule 77 ($@11)

    type_def  go to state 4
    $@11      go to state 5


State 2

    0 $accept: prog . $end

    $end  shift, and go to state 6


State 3

   15 type_def: TK_TYPEDEF . type TK_TYPE_ID TK_SEMI

    TK_INT_TYPE   shift, and go to state 7
    TK_CHAR_TYPE  shift, and go to state 8
    TK_VOID_TYPE  shift, and go to state 9
    TK_STRUCT     shift, and go to state 10
    TK_LPAR       shift, and go to state 11
    TK_TYPE_ID    shift, and go to state 12

    type     go to state 13
    base     go to state 14
    pointer  go to state 15
    array    go to state 16
    record   go to state 17


State 4

   17 type_def_list: type_def_list type_def .

    $default  reduce using rule 17 (type_def_list)


State 5

   78 prog: type_def_list $@11 . function_list function

    $default  reduce using rule 75 (function_list)

    function_list  go to state 18


State 6

    0 $accept: prog $end .

    $default  accept


State 7

    7 base: TK_INT_TYPE .

    $default  reduce using rule 7 (base)


State 8

    8 base: TK_CHAR_TYPE .

    $default  reduce using rule 8 (base)


State 9

    9 base: TK_VOID_TYPE .

    $default  reduce using rule 9 (base)


State 10

   12 record: TK_STRUCT . TK_LACC field_list TK_RACC

    TK_LACC  shift, and go to state 19


State 11

    6 type: TK_LPAR . type TK_RPAR

    TK_INT_TYPE   shift, and go to state 7
    TK_CHAR_TYPE  shift, and go to state 8
    TK_VOID_TYPE  shift, and go to state 9
    TK_STRUCT     shift, and go to state 10
    TK_LPAR       shift, and go to state 11
    TK_TYPE_ID    shift, and go to state 12

    type     go to state 20
    base     go to state 14
    pointer  go to state 15
    array    go to state 16
    record   go to state 17


State 12

    5 type: TK_TYPE_ID .

    $default  reduce using rule 5 (type)


State 13

   10 pointer: type . TK_MUL
   11 array: type . TK_LBRAC TK_NUM TK_RBRAC
   15 type_def: TK_TYPEDEF type . TK_TYPE_ID TK_SEMI

    TK_MUL      shift, and go to state 21
    TK_TYPE_ID  shift, and go to state 22
    TK_LBRAC    shift, and go to state 23


State 14

    1 type: base .

    $default  reduce using rule 1 (type)


State 15

    2 type: pointer .

    $default  reduce using rule 2 (type)


State 16

    3 type: array .

    $default  reduce using rule 3 (type)


State 17

    4 type: record .

    $default  reduce using rule 4 (type)


State 18

   76 function_list: function_list . function
   78 prog: type_def_list $@11 function_list . function

    TK_INT_TYPE   shift, and go to state 7
    TK_CHAR_TYPE  shift, and go to state 8
    TK_VOID_TYPE  shift, and go to state 9
    TK_STRUCT     shift, and go to state 10
    TK_LPAR       shift, and go to state 11
    TK_TYPE_ID    shift, and go to state 12

    type      go to state 24
    base      go to state 14
    pointer   go to state 15
    array     go to state 16
    record    go to state 17
    function  go to state 25


State 19

   12 record: TK_STRUCT TK_LACC . field_list TK_RACC

    TK_INT_TYPE   shift, and go to state 7
    TK_CHAR_TYPE  shift, and go to state 8
    TK_VOID_TYPE  shift, and go to state 9
    TK_STRUCT     shift, and go to state 10
    TK_LPAR       shift, and go to state 11
    TK_TYPE_ID    shift, and go to state 12

    type        go to state 26
    base        go to state 14
    pointer     go to state 15
    array       go to state 16
    record      go to state 17
    field_list  go to state 27


State 20

    6 type: TK_LPAR type . TK_RPAR
   10 pointer: type . TK_MUL
   11 array: type . TK_LBRAC TK_NUM TK_RBRAC

    TK_RPAR   shift, and go to state 28
    TK_MUL    shift, and go to state 21
    TK_LBRAC  shift, and go to state 23


State 21

   10 pointer: type TK_MUL .

    $default  reduce using rule 10 (pointer)


State 22

   15 type_def: TK_TYPEDEF type TK_TYPE_ID . TK_SEMI

    TK_SEMI  shift, and go to state 29


State 23

   11 array: type TK_LBRAC . TK_NUM TK_RBRAC

    TK_NUM  shift, and go to state 30


State 24

   10 pointer: type . TK_MUL
   11 array: type . TK_LBRAC TK_NUM TK_RBRAC
   74 function: type . TK_ID TK_LPAR $@9 declare_args TK_RPAR TK_LACC declare_local_vars $@10 stmt_list TK_RACC

    TK_MUL    shift, and go to state 21
    TK_ID     shift, and go to state 31
    TK_LBRAC  shift, and go to state 23


State 25

   76 function_list: function_list function .  [TK_INT_TYPE, TK_CHAR_TYPE, TK_VOID_TYPE, TK_STRUCT, TK_LPAR, TK_TYPE_ID]
   78 prog: type_def_list $@11 function_list function .  [$end]

    $end      reduce using rule 78 (prog)
    $default  reduce using rule 76 (function_list)


State 26

   10 pointer: type . TK_MUL
   11 array: type . TK_LBRAC TK_NUM TK_RBRAC
   13 field_list: type . TK_ID TK_SEMI

    TK_MUL    shift, and go to state 21
    TK_ID     shift, and go to state 32
    TK_LBRAC  shift, and go to state 23


State 27

   12 record: TK_STRUCT TK_LACC field_list . TK_RACC
   14 field_list: field_list . type TK_ID TK_SEMI

    TK_INT_TYPE   shift, and go to state 7
    TK_CHAR_TYPE  shift, and go to state 8
    TK_VOID_TYPE  shift, and go to state 9
    TK_STRUCT     shift, and go to state 10
    TK_LPAR       shift, and go to state 11
    TK_RACC       shift, and go to state 33
    TK_TYPE_ID    shift, and go to state 12

    type     go to state 34
    base     go to state 14
    pointer  go to state 15
    array    go to state 16
    record   go to state 17


State 28

    6 type: TK_LPAR type TK_RPAR .

    $default  reduce using rule 6 (type)


State 29

   15 type_def: TK_TYPEDEF type TK_TYPE_ID TK_SEMI .

    $default  reduce using rule 15 (type_def)


State 30

   11 array: type TK_LBRAC TK_NUM . TK_RBRAC

    TK_RBRAC  shift, and go to state 35


State 31

   74 function: type TK_ID . TK_LPAR $@9 declare_args TK_RPAR TK_LACC declare_local_vars $@10 stmt_list TK_RACC

    TK_LPAR  shift, and go to state 36


State 32

   13 field_list: type TK_ID . TK_SEMI

    TK_SEMI  shift, and go to state 37


State 33

   12 record: TK_STRUCT TK_LACC field_list TK_RACC .

    $default  reduce using rule 12 (record)


State 34

   10 pointer: type . TK_MUL
   11 array: type . TK_LBRAC TK_NUM TK_RBRAC
   14 field_list: field_list type . TK_ID TK_SEMI

    TK_MUL    shift, and go to state 21
    TK_ID     shift, and go to state 38
    TK_LBRAC  shift, and go to state 23


State 35

   11 array: type TK_LBRAC TK_NUM TK_RBRAC .

    $default  reduce using rule 11 (array)


State 36

   74 function: type TK_ID TK_LPAR . $@9 declare_args TK_RPAR TK_LACC declare_local_vars $@10 stmt_list TK_RACC

    $default  reduce using rule 72 ($@9)

    $@9  go to state 39


State 37

   13 field_list: type TK_ID TK_SEMI .

    $default  reduce using rule 13 (field_list)


State 38

   14 field_list: field_list type TK_ID . TK_SEMI

    TK_SEMI  shift, and go to state 40


State 39

   74 function: type TK_ID TK_LPAR $@9 . declare_args TK_RPAR TK_LACC declare_local_vars $@10 stmt_list TK_RACC

    TK_INT_TYPE   shift, and go to state 7
    TK_CHAR_TYPE  shift, and go to state 8
    TK_VOID_TYPE  shift, and go to state 9
    TK_STRUCT     shift, and go to state 10
    TK_LPAR       shift, and go to state 11
    TK_TYPE_ID    shift, and go to state 12

    $default  reduce using rule 64 (declare_args)

    type          go to state 41
    base          go to state 14
    pointer       go to state 15
    array         go to state 16
    record        go to state 17
    declare_args  go to state 42


State 40

   14 field_list: field_list type TK_ID TK_SEMI .

    $default  reduce using rule 14 (field_list)


State 41

   10 pointer: type . TK_MUL
   11 array: type . TK_LBRAC TK_NUM TK_RBRAC
   65 declare_args: type . TK_ID

    TK_MUL    shift, and go to state 21
    TK_ID     shift, and go to state 43
    TK_LBRAC  shift, and go to state 23


State 42

   66 declare_args: declare_args . TK_COMMA type TK_ID
   74 function: type TK_ID TK_LPAR $@9 declare_args . TK_RPAR TK_LACC declare_local_vars $@10 stmt_list TK_RACC

    TK_RPAR   shift, and go to state 44
    TK_COMMA  shift, and go to state 45


State 43

   65 declare_args: type TK_ID .

    $default  reduce using rule 65 (declare_args)


State 44

   74 function: type TK_ID TK_LPAR $@9 declare_args TK_RPAR . TK_LACC declare_local_vars $@10 stmt_list TK_RACC

    TK_LACC  shift, and go to state 46


State 45

   66 declare_args: declare_args TK_COMMA . type TK_ID

    TK_INT_TYPE   shift, and go to state 7
    TK_CHAR_TYPE  shift, and go to state 8
    TK_VOID_TYPE  shift, and go to state 9
    TK_STRUCT     shift, and go to state 10
    TK_LPAR       shift, and go to state 11
    TK_TYPE_ID    shift, and go to state 12

    type     go to state 47
    base     go to state 14
    pointer  go to state 15
    array    go to state 16
    record   go to state 17


State 46

   74 function: type TK_ID TK_LPAR $@9 declare_args TK_RPAR TK_LACC . declare_local_vars $@10 stmt_list TK_RACC

    $default  reduce using rule 67 (declare_local_vars)

    declare_local_vars  go to state 48


State 47

   10 pointer: type . TK_MUL
   11 array: type . TK_LBRAC TK_NUM TK_RBRAC
   66 declare_args: declare_args TK_COMMA type . TK_ID

    TK_MUL    shift, and go to state 21
    TK_ID     shift, and go to state 49
    TK_LBRAC  shift, and go to state 23


State 48

   68 declare_local_vars: declare_local_vars . type TK_ID TK_SEMI
   74 function: type TK_ID TK_LPAR $@9 declare_args TK_RPAR TK_LACC declare_local_vars . $@10 stmt_list TK_RACC

    TK_INT_TYPE   shift, and go to state 7
    TK_CHAR_TYPE  shift, and go to state 8
    TK_VOID_TYPE  shift, and go to state 9
    TK_STRUCT     shift, and go to state 10
    TK_LPAR       shift, and go to state 11
    TK_TYPE_ID    shift, and go to state 12

    TK_LPAR   [reduce using rule 73 ($@10)]
    $default  reduce using rule 73 ($@10)

    type     go to state 50
    base     go to state 14
    pointer  go to state 15
    array    go to state 16
    record   go to state 17
    $@10     go to state 51


State 49

   66 declare_args: declare_args TK_COMMA type TK_ID .

    $default  reduce using rule 66 (declare_args)


State 50

   10 pointer: type . TK_MUL
   11 array: type . TK_LBRAC TK_NUM TK_RBRAC
   68 declare_local_vars: declare_local_vars type . TK_ID TK_SEMI

    TK_MUL    shift, and go to state 21
    TK_ID     shift, and go to state 52
    TK_LBRAC  shift, and go to state 23


State 51

   74 function: type TK_ID TK_LPAR $@9 declare_args TK_RPAR TK_LACC declare_local_vars $@10 . stmt_list TK_RACC

    $default  reduce using rule 62 (stmt_list)

    stmt_list  go to state 53


State 52

   68 declare_local_vars: declare_local_vars type TK_ID . TK_SEMI

    TK_SEMI  shift, and go to state 54


State 53

   63 stmt_list: stmt_list . stmt
   74 function: type TK_ID TK_LPAR $@9 declare_args TK_RPAR TK_LACC declare_local_vars $@10 stmt_list . TK_RACC

    TK_LPAR    shift, and go to state 55
    TK_RACC    shift, and go to state 56
    TK_MUL     shift, and go to state 57
    TK_ID      shift, and go to state 58
    TK_IF      shift, and go to state 59
    TK_WHILE   shift, and go to state 60
    TK_FOR     shift, and go to state 61
    TK_RETURN  shift, and go to state 62

    var_expr  go to state 63
    stmt      go to state 64


State 54

   68 declare_local_vars: declare_local_vars type TK_ID TK_SEMI .

    $default  reduce using rule 68 (declare_local_vars)


State 55

   35 var_expr: TK_LPAR . var_expr TK_RPAR

    TK_LPAR  shift, and go to state 55
    TK_MUL   shift, and go to state 57
    TK_ID    shift, and go to state 65

    var_expr  go to state 66


State 56

   74 function: type TK_ID TK_LPAR $@9 declare_args TK_RPAR TK_LACC declare_local_vars $@10 stmt_list TK_RACC .

    $default  reduce using rule 74 (function)


State 57

   32 var_expr: TK_MUL . var_expr

    TK_LPAR  shift, and go to state 55
    TK_MUL   shift, and go to state 57
    TK_ID    shift, and go to state 65

    var_expr  go to state 67


State 58

   31 var_expr: TK_ID .  [TK_LBRAC, TK_DOT, TK_ASSIGN]
   44 stmt: TK_ID . TK_ASSIGN expr TK_SEMI
   57     | TK_ID . TK_LPAR $@8 caller_arg_list TK_RPAR TK_SEMI

    TK_LPAR    shift, and go to state 68
    TK_ASSIGN  shift, and go to state 69

    TK_ASSIGN  [reduce using rule 31 (var_expr)]
    $default   reduce using rule 31 (var_expr)


State 59

   48 stmt: TK_IF . test $@2 stmt_block $@3 stmt_else

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 71
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 79
    test      go to state 80


State 60

   51 stmt: TK_WHILE . $@4 test $@5 stmt_block

    $default  reduce using rule 49 ($@4)

    $@4  go to state 81


State 61

   54 stmt: TK_FOR . TK_LPAR stmt $@6 test TK_SEMI $@7 TK_ID TK_PLUSPLUS TK_RPAR stmt_block

    TK_LPAR  shift, and go to state 82


State 62

   55 stmt: TK_RETURN . expr TK_SEMI

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 84


State 63

   33 var_expr: var_expr . TK_LBRAC e_expr TK_RBRAC
   34         | var_expr . TK_DOT TK_ID
   45 stmt: var_expr . TK_ASSIGN expr TK_SEMI

    TK_LBRAC   shift, and go to state 85
    TK_DOT     shift, and go to state 86
    TK_ASSIGN  shift, and go to state 87


State 64

   63 stmt_list: stmt_list stmt .

    $default  reduce using rule 63 (stmt_list)


State 65

   31 var_expr: TK_ID .

    $default  reduce using rule 31 (var_expr)


State 66

   33 var_expr: var_expr . TK_LBRAC e_expr TK_RBRAC
   34         | var_expr . TK_DOT TK_ID
   35         | TK_LPAR var_expr . TK_RPAR

    TK_RPAR   shift, and go to state 88
    TK_LBRAC  shift, and go to state 85
    TK_DOT    shift, and go to state 86


State 67

   32 var_expr: TK_MUL var_expr .  [TK_LPAR, TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_GREATER_EQ, TK_LOWER, TK_LOWER_EQ, TK_EQUAL, TK_NEQUAL, TK_PLUS, TK_MINUS, TK_MUL, TK_DIV, TK_ID, TK_LBRAC, TK_RBRAC, TK_DOT, TK_ASSIGN, TK_IF, TK_WHILE, TK_FOR, TK_RETURN]
   33         | var_expr . TK_LBRAC e_expr TK_RBRAC
   34         | var_expr . TK_DOT TK_ID

    TK_LBRAC  shift, and go to state 85
    TK_DOT    shift, and go to state 86

    TK_LBRAC  [reduce using rule 32 (var_expr)]
    TK_DOT    [reduce using rule 32 (var_expr)]
    $default  reduce using rule 32 (var_expr)


State 68

   57 stmt: TK_ID TK_LPAR . $@8 caller_arg_list TK_RPAR TK_SEMI

    $default  reduce using rule 56 ($@8)

    $@8  go to state 89


State 69

   44 stmt: TK_ID TK_ASSIGN . expr TK_SEMI

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 90


State 70

   27 f_expr: TK_SIZEOF . TK_LPAR TK_TYPE_ID TK_RPAR

    TK_LPAR  shift, and go to state 91


State 71

   30 f_expr: TK_LPAR . e_expr TK_RPAR
   35 var_expr: TK_LPAR . var_expr TK_RPAR
   43 test: TK_LPAR . test TK_RPAR

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 71
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 92
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 93
    expr      go to state 79
    test      go to state 94


State 72

   24 f_expr: TK_NUM .

    $default  reduce using rule 24 (f_expr)


State 73

   29 f_expr: TK_ID . TK_LPAR $@1 caller_arg_list TK_RPAR
   31 var_expr: TK_ID .  [TK_LPAR, TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_GREATER_EQ, TK_LOWER, TK_LOWER_EQ, TK_EQUAL, TK_NEQUAL, TK_PLUS, TK_MINUS, TK_MUL, TK_DIV, TK_ID, TK_LBRAC, TK_RBRAC, TK_DOT, TK_IF, TK_WHILE, TK_FOR, TK_RETURN]

    TK_LPAR  shift, and go to state 95

    TK_LPAR   [reduce using rule 31 (var_expr)]
    $default  reduce using rule 31 (var_expr)


State 74

   25 f_expr: TK_CHAR .

    $default  reduce using rule 25 (f_expr)


State 75

   18 e_expr: e_expr . TK_PLUS t_expr
   19       | e_expr . TK_MINUS t_expr
   36 expr: e_expr .  [TK_LPAR, TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_GREATER_EQ, TK_LOWER, TK_LOWER_EQ, TK_EQUAL, TK_NEQUAL, TK_MUL, TK_ID, TK_IF, TK_WHILE, TK_FOR, TK_RETURN]

    TK_PLUS   shift, and go to state 96
    TK_MINUS  shift, and go to state 97

    $default  reduce using rule 36 (expr)


State 76

   20 e_expr: t_expr .  [TK_LPAR, TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_GREATER_EQ, TK_LOWER, TK_LOWER_EQ, TK_EQUAL, TK_NEQUAL, TK_PLUS, TK_MINUS, TK_MUL, TK_ID, TK_RBRAC, TK_IF, TK_WHILE, TK_FOR, TK_RETURN]
   21 t_expr: t_expr . TK_MUL f_expr
   22       | t_expr . TK_DIV f_expr

    TK_MUL  shift, and go to state 98
    TK_DIV  shift, and go to state 99

    TK_MUL    [reduce using rule 20 (e_expr)]
    $default  reduce using rule 20 (e_expr)


State 77

   23 t_expr: f_expr .

    $default  reduce using rule 23 (t_expr)


State 78

   26 f_expr: var_expr .  [TK_LPAR, TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_GREATER_EQ, TK_LOWER, TK_LOWER_EQ, TK_EQUAL, TK_NEQUAL, TK_PLUS, TK_MINUS, TK_MUL, TK_DIV, TK_ID, TK_RBRAC, TK_IF, TK_WHILE, TK_FOR, TK_RETURN]
   33 var_expr: var_expr . TK_LBRAC e_expr TK_RBRAC
   34         | var_expr . TK_DOT TK_ID

    TK_LBRAC  shift, and go to state 85
    TK_DOT    shift, and go to state 86

    $default  reduce using rule 26 (f_expr)


State 79

   37 test: expr . TK_GREATER expr
   38     | expr . TK_GREATER_EQ expr
   39     | expr . TK_LOWER expr
   40     | expr . TK_LOWER_EQ expr
   41     | expr . TK_EQUAL expr
   42     | expr . TK_NEQUAL expr

    TK_GREATER     shift, and go to state 100
    TK_GREATER_EQ  shift, and go to state 101
    TK_LOWER       shift, and go to state 102
    TK_LOWER_EQ    shift, and go to state 103
    TK_EQUAL       shift, and go to state 104
    TK_NEQUAL      shift, and go to state 105


State 80

   48 stmt: TK_IF test . $@2 stmt_block $@3 stmt_else

    $default  reduce using rule 46 ($@2)

    $@2  go to state 106


State 81

   51 stmt: TK_WHILE $@4 . test $@5 stmt_block

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 71
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 79
    test      go to state 107


State 82

   54 stmt: TK_FOR TK_LPAR . stmt $@6 test TK_SEMI $@7 TK_ID TK_PLUSPLUS TK_RPAR stmt_block

    TK_LPAR    shift, and go to state 55
    TK_MUL     shift, and go to state 57
    TK_ID      shift, and go to state 58
    TK_IF      shift, and go to state 59
    TK_WHILE   shift, and go to state 60
    TK_FOR     shift, and go to state 61
    TK_RETURN  shift, and go to state 62

    var_expr  go to state 63
    stmt      go to state 108


State 83

   30 f_expr: TK_LPAR . e_expr TK_RPAR
   35 var_expr: TK_LPAR . var_expr TK_RPAR

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 109
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 93


State 84

   55 stmt: TK_RETURN expr . TK_SEMI

    TK_SEMI  shift, and go to state 110


State 85

   33 var_expr: var_expr TK_LBRAC . e_expr TK_RBRAC

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 111
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78


State 86

   34 var_expr: var_expr TK_DOT . TK_ID

    TK_ID  shift, and go to state 112


State 87

   45 stmt: var_expr TK_ASSIGN . expr TK_SEMI

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 113


State 88

   35 var_expr: TK_LPAR var_expr TK_RPAR .

    $default  reduce using rule 35 (var_expr)


State 89

   57 stmt: TK_ID TK_LPAR $@8 . caller_arg_list TK_RPAR TK_SEMI

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    $default  reduce using rule 69 (caller_arg_list)

    e_expr           go to state 75
    t_expr           go to state 76
    f_expr           go to state 77
    var_expr         go to state 78
    expr             go to state 114
    caller_arg_list  go to state 115


State 90

   44 stmt: TK_ID TK_ASSIGN expr . TK_SEMI

    TK_SEMI  shift, and go to state 116


State 91

   27 f_expr: TK_SIZEOF TK_LPAR . TK_TYPE_ID TK_RPAR

    TK_TYPE_ID  shift, and go to state 117


State 92

   18 e_expr: e_expr . TK_PLUS t_expr
   19       | e_expr . TK_MINUS t_expr
   30 f_expr: TK_LPAR e_expr . TK_RPAR
   36 expr: e_expr .  [TK_GREATER, TK_GREATER_EQ, TK_LOWER, TK_LOWER_EQ, TK_EQUAL, TK_NEQUAL]

    TK_RPAR   shift, and go to state 118
    TK_PLUS   shift, and go to state 96
    TK_MINUS  shift, and go to state 97

    $default  reduce using rule 36 (expr)


State 93

   26 f_expr: var_expr .  [TK_RPAR, TK_GREATER, TK_GREATER_EQ, TK_LOWER, TK_LOWER_EQ, TK_EQUAL, TK_NEQUAL, TK_PLUS, TK_MINUS, TK_MUL, TK_DIV]
   33 var_expr: var_expr . TK_LBRAC e_expr TK_RBRAC
   34         | var_expr . TK_DOT TK_ID
   35         | TK_LPAR var_expr . TK_RPAR

    TK_RPAR   shift, and go to state 88
    TK_LBRAC  shift, and go to state 85
    TK_DOT    shift, and go to state 86

    TK_RPAR   [reduce using rule 26 (f_expr)]
    $default  reduce using rule 26 (f_expr)


State 94

   43 test: TK_LPAR test . TK_RPAR

    TK_RPAR  shift, and go to state 119


State 95

   29 f_expr: TK_ID TK_LPAR . $@1 caller_arg_list TK_RPAR

    $default  reduce using rule 28 ($@1)

    $@1  go to state 120


State 96

   18 e_expr: e_expr TK_PLUS . t_expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    t_expr    go to state 121
    f_expr    go to state 77
    var_expr  go to state 78


State 97

   19 e_expr: e_expr TK_MINUS . t_expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    t_expr    go to state 122
    f_expr    go to state 77
    var_expr  go to state 78


State 98

   21 t_expr: t_expr TK_MUL . f_expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    f_expr    go to state 123
    var_expr  go to state 78


State 99

   22 t_expr: t_expr TK_DIV . f_expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    f_expr    go to state 124
    var_expr  go to state 78


State 100

   37 test: expr TK_GREATER . expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 125


State 101

   38 test: expr TK_GREATER_EQ . expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 126


State 102

   39 test: expr TK_LOWER . expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 127


State 103

   40 test: expr TK_LOWER_EQ . expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 128


State 104

   41 test: expr TK_EQUAL . expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 129


State 105

   42 test: expr TK_NEQUAL . expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 130


State 106

   48 stmt: TK_IF test $@2 . stmt_block $@3 stmt_else

    TK_LPAR    shift, and go to state 55
    TK_LACC    shift, and go to state 131
    TK_MUL     shift, and go to state 57
    TK_ID      shift, and go to state 58
    TK_IF      shift, and go to state 59
    TK_WHILE   shift, and go to state 60
    TK_FOR     shift, and go to state 61
    TK_RETURN  shift, and go to state 62

    var_expr    go to state 63
    stmt        go to state 132
    stmt_block  go to state 133


State 107

   51 stmt: TK_WHILE $@4 test . $@5 stmt_block

    $default  reduce using rule 50 ($@5)

    $@5  go to state 134


State 108

   54 stmt: TK_FOR TK_LPAR stmt . $@6 test TK_SEMI $@7 TK_ID TK_PLUSPLUS TK_RPAR stmt_block

    $default  reduce using rule 52 ($@6)

    $@6  go to state 135


State 109

   18 e_expr: e_expr . TK_PLUS t_expr
   19       | e_expr . TK_MINUS t_expr
   30 f_expr: TK_LPAR e_expr . TK_RPAR

    TK_RPAR   shift, and go to state 118
    TK_PLUS   shift, and go to state 96
    TK_MINUS  shift, and go to state 97


State 110

   55 stmt: TK_RETURN expr TK_SEMI .

    $default  reduce using rule 55 (stmt)


State 111

   18 e_expr: e_expr . TK_PLUS t_expr
   19       | e_expr . TK_MINUS t_expr
   33 var_expr: var_expr TK_LBRAC e_expr . TK_RBRAC

    TK_PLUS   shift, and go to state 96
    TK_MINUS  shift, and go to state 97
    TK_RBRAC  shift, and go to state 136


State 112

   34 var_expr: var_expr TK_DOT TK_ID .

    $default  reduce using rule 34 (var_expr)


State 113

   45 stmt: var_expr TK_ASSIGN expr . TK_SEMI

    TK_SEMI  shift, and go to state 137


State 114

   70 caller_arg_list: expr .

    $default  reduce using rule 70 (caller_arg_list)


State 115

   57 stmt: TK_ID TK_LPAR $@8 caller_arg_list . TK_RPAR TK_SEMI
   71 caller_arg_list: caller_arg_list . TK_COMMA expr

    TK_RPAR   shift, and go to state 138
    TK_COMMA  shift, and go to state 139


State 116

   44 stmt: TK_ID TK_ASSIGN expr TK_SEMI .

    $default  reduce using rule 44 (stmt)


State 117

   27 f_expr: TK_SIZEOF TK_LPAR TK_TYPE_ID . TK_RPAR

    TK_RPAR  shift, and go to state 140


State 118

   30 f_expr: TK_LPAR e_expr TK_RPAR .

    $default  reduce using rule 30 (f_expr)


State 119

   43 test: TK_LPAR test TK_RPAR .

    $default  reduce using rule 43 (test)


State 120

   29 f_expr: TK_ID TK_LPAR $@1 . caller_arg_list TK_RPAR

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    $default  reduce using rule 69 (caller_arg_list)

    e_expr           go to state 75
    t_expr           go to state 76
    f_expr           go to state 77
    var_expr         go to state 78
    expr             go to state 114
    caller_arg_list  go to state 141


State 121

   18 e_expr: e_expr TK_PLUS t_expr .  [TK_LPAR, TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_GREATER_EQ, TK_LOWER, TK_LOWER_EQ, TK_EQUAL, TK_NEQUAL, TK_PLUS, TK_MINUS, TK_ID, TK_RBRAC, TK_IF, TK_WHILE, TK_FOR, TK_RETURN]
   21 t_expr: t_expr . TK_MUL f_expr
   22       | t_expr . TK_DIV f_expr

    TK_MUL  shift, and go to state 98
    TK_DIV  shift, and go to state 99

    $default  reduce using rule 18 (e_expr)


State 122

   19 e_expr: e_expr TK_MINUS t_expr .  [TK_LPAR, TK_RPAR, TK_COMMA, TK_SEMI, TK_LACC, TK_GREATER, TK_GREATER_EQ, TK_LOWER, TK_LOWER_EQ, TK_EQUAL, TK_NEQUAL, TK_PLUS, TK_MINUS, TK_ID, TK_RBRAC, TK_IF, TK_WHILE, TK_FOR, TK_RETURN]
   21 t_expr: t_expr . TK_MUL f_expr
   22       | t_expr . TK_DIV f_expr

    TK_MUL  shift, and go to state 98
    TK_DIV  shift, and go to state 99

    $default  reduce using rule 19 (e_expr)


State 123

   21 t_expr: t_expr TK_MUL f_expr .

    $default  reduce using rule 21 (t_expr)


State 124

   22 t_expr: t_expr TK_DIV f_expr .

    $default  reduce using rule 22 (t_expr)


State 125

   37 test: expr TK_GREATER expr .

    $default  reduce using rule 37 (test)


State 126

   38 test: expr TK_GREATER_EQ expr .

    $default  reduce using rule 38 (test)


State 127

   39 test: expr TK_LOWER expr .

    $default  reduce using rule 39 (test)


State 128

   40 test: expr TK_LOWER_EQ expr .

    $default  reduce using rule 40 (test)


State 129

   41 test: expr TK_EQUAL expr .

    $default  reduce using rule 41 (test)


State 130

   42 test: expr TK_NEQUAL expr .

    $default  reduce using rule 42 (test)


State 131

   61 stmt_block: TK_LACC . stmt_list TK_RACC

    $default  reduce using rule 62 (stmt_list)

    stmt_list  go to state 142


State 132

   60 stmt_block: stmt .

    $default  reduce using rule 60 (stmt_block)


State 133

   48 stmt: TK_IF test $@2 stmt_block . $@3 stmt_else

    $default  reduce using rule 47 ($@3)

    $@3  go to state 143


State 134

   51 stmt: TK_WHILE $@4 test $@5 . stmt_block

    TK_LPAR    shift, and go to state 55
    TK_LACC    shift, and go to state 131
    TK_MUL     shift, and go to state 57
    TK_ID      shift, and go to state 58
    TK_IF      shift, and go to state 59
    TK_WHILE   shift, and go to state 60
    TK_FOR     shift, and go to state 61
    TK_RETURN  shift, and go to state 62

    var_expr    go to state 63
    stmt        go to state 132
    stmt_block  go to state 144


State 135

   54 stmt: TK_FOR TK_LPAR stmt $@6 . test TK_SEMI $@7 TK_ID TK_PLUSPLUS TK_RPAR stmt_block

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 71
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 79
    test      go to state 145


State 136

   33 var_expr: var_expr TK_LBRAC e_expr TK_RBRAC .

    $default  reduce using rule 33 (var_expr)


State 137

   45 stmt: var_expr TK_ASSIGN expr TK_SEMI .

    $default  reduce using rule 45 (stmt)


State 138

   57 stmt: TK_ID TK_LPAR $@8 caller_arg_list TK_RPAR . TK_SEMI

    TK_SEMI  shift, and go to state 146


State 139

   71 caller_arg_list: caller_arg_list TK_COMMA . expr

    TK_SIZEOF  shift, and go to state 70
    TK_LPAR    shift, and go to state 83
    TK_MUL     shift, and go to state 57
    TK_NUM     shift, and go to state 72
    TK_ID      shift, and go to state 73
    TK_CHAR    shift, and go to state 74

    e_expr    go to state 75
    t_expr    go to state 76
    f_expr    go to state 77
    var_expr  go to state 78
    expr      go to state 147


State 140

   27 f_expr: TK_SIZEOF TK_LPAR TK_TYPE_ID TK_RPAR .

    $default  reduce using rule 27 (f_expr)


State 141

   29 f_expr: TK_ID TK_LPAR $@1 caller_arg_list . TK_RPAR
   71 caller_arg_list: caller_arg_list . TK_COMMA expr

    TK_RPAR   shift, and go to state 148
    TK_COMMA  shift, and go to state 139


State 142

   61 stmt_block: TK_LACC stmt_list . TK_RACC
   63 stmt_list: stmt_list . stmt

    TK_LPAR    shift, and go to state 55
    TK_RACC    shift, and go to state 149
    TK_MUL     shift, and go to state 57
    TK_ID      shift, and go to state 58
    TK_IF      shift, and go to state 59
    TK_WHILE   shift, and go to state 60
    TK_FOR     shift, and go to state 61
    TK_RETURN  shift, and go to state 62

    var_expr  go to state 63
    stmt      go to state 64


State 143

   48 stmt: TK_IF test $@2 stmt_block $@3 . stmt_else

    TK_ELSE  shift, and go to state 150

    TK_ELSE   [reduce using rule 58 (stmt_else)]
    $default  reduce using rule 58 (stmt_else)

    stmt_else  go to state 151


State 144

   51 stmt: TK_WHILE $@4 test $@5 stmt_block .

    $default  reduce using rule 51 (stmt)


State 145

   54 stmt: TK_FOR TK_LPAR stmt $@6 test . TK_SEMI $@7 TK_ID TK_PLUSPLUS TK_RPAR stmt_block

    TK_SEMI  shift, and go to state 152


State 146

   57 stmt: TK_ID TK_LPAR $@8 caller_arg_list TK_RPAR TK_SEMI .

    $default  reduce using rule 57 (stmt)


State 147

   71 caller_arg_list: caller_arg_list TK_COMMA expr .

    $default  reduce using rule 71 (caller_arg_list)


State 148

   29 f_expr: TK_ID TK_LPAR $@1 caller_arg_list TK_RPAR .

    $default  reduce using rule 29 (f_expr)


State 149

   61 stmt_block: TK_LACC stmt_list TK_RACC .

    $default  reduce using rule 61 (stmt_block)


State 150

   59 stmt_else: TK_ELSE . stmt_block

    TK_LPAR    shift, and go to state 55
    TK_LACC    shift, and go to state 131
    TK_MUL     shift, and go to state 57
    TK_ID      shift, and go to state 58
    TK_IF      shift, and go to state 59
    TK_WHILE   shift, and go to state 60
    TK_FOR     shift, and go to state 61
    TK_RETURN  shift, and go to state 62

    var_expr    go to state 63
    stmt        go to state 132
    stmt_block  go to state 153


State 151

   48 stmt: TK_IF test $@2 stmt_block $@3 stmt_else .

    $default  reduce using rule 48 (stmt)


State 152

   54 stmt: TK_FOR TK_LPAR stmt $@6 test TK_SEMI . $@7 TK_ID TK_PLUSPLUS TK_RPAR stmt_block

    $default  reduce using rule 53 ($@7)

    $@7  go to state 154


State 153

   59 stmt_else: TK_ELSE stmt_block .

    $default  reduce using rule 59 (stmt_else)


State 154

   54 stmt: TK_FOR TK_LPAR stmt $@6 test TK_SEMI $@7 . TK_ID TK_PLUSPLUS TK_RPAR stmt_block

    TK_ID  shift, and go to state 155


State 155

   54 stmt: TK_FOR TK_LPAR stmt $@6 test TK_SEMI $@7 TK_ID . TK_PLUSPLUS TK_RPAR stmt_block

    TK_PLUSPLUS  shift, and go to state 156


State 156

   54 stmt: TK_FOR TK_LPAR stmt $@6 test TK_SEMI $@7 TK_ID TK_PLUSPLUS . TK_RPAR stmt_block

    TK_RPAR  shift, and go to state 157


State 157

   54 stmt: TK_FOR TK_LPAR stmt $@6 test TK_SEMI $@7 TK_ID TK_PLUSPLUS TK_RPAR . stmt_block

    TK_LPAR    shift, and go to state 55
    TK_LACC    shift, and go to state 131
    TK_MUL     shift, and go to state 57
    TK_ID      shift, and go to state 58
    TK_IF      shift, and go to state 59
    TK_WHILE   shift, and go to state 60
    TK_FOR     shift, and go to state 61
    TK_RETURN  shift, and go to state 62

    var_expr    go to state 63
    stmt        go to state 132
    stmt_block  go to state 158


State 158

   54 stmt: TK_FOR TK_LPAR stmt $@6 test TK_SEMI $@7 TK_ID TK_PLUSPLUS TK_RPAR stmt_block .

    $default  reduce using rule 54 (stmt)
